// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: roles.sql

package repository

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createRole = `-- name: CreateRole :one
INSERT INTO roles (
    id, role
) VALUES (
    $1, $2
)
RETURNING id, role
`

type CreateRoleParams struct {
	ID   uuid.UUID
	Role pgtype.Text
}

func (q *Queries) CreateRole(ctx context.Context, arg CreateRoleParams) (Role, error) {
	row := q.db.QueryRow(ctx, createRole, arg.ID, arg.Role)
	var i Role
	err := row.Scan(&i.ID, &i.Role)
	return i, err
}

const getRole = `-- name: GetRole :one
SELECT id, role
FROM roles
WHERE id = $1
`

func (q *Queries) GetRole(ctx context.Context, id uuid.UUID) (Role, error) {
	row := q.db.QueryRow(ctx, getRole, id)
	var i Role
	err := row.Scan(&i.ID, &i.Role)
	return i, err
}

const updateRole = `-- name: UpdateRole :exec
UPDATE roles
SET role = $2
WHERE id = $1
`

type UpdateRoleParams struct {
	ID   uuid.UUID
	Role pgtype.Text
}

func (q *Queries) UpdateRole(ctx context.Context, arg UpdateRoleParams) error {
	_, err := q.db.Exec(ctx, updateRole, arg.ID, arg.Role)
	return err
}
